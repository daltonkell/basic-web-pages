/* Block Styling and Notes */

/* Block boxes always appear below the previous block element. This is the
“natural” or “static” flow of an HTML document when it gets rendered by a web browser.

The width of block boxes is set automatically based on the width of its parent container.
In this case, our blocks are always the width of the browser window.

The default height of block boxes is based on the content it contains. When you narrow
the browser window, the <h1> gets split over two lines, and its height adjusts accordingly.

Inline boxes don’t affect vertical spacing. They’re not for determining layout—they’re for styling stuff inside of a block.

The width of inline boxes is based on the content it contains, not the width of the parent element.*/

h1, p {
  background-color: #DDE0E3;    /* Light gray */
}

em, strong {
  background-color: #B2D6FF;    /* Light blue */
  display: inline;              /* default for em and strong */
}

/* Content, Padding, Border, and Margin

The CSS box mdel is a set of rules which determine the dimensions of every element in
a web page. It gives each box (both inline and block) four properties:
  - content: the text, image, or other media in the element
  - padding: the space between the box's content and its border
  - border: the line between the box's padding and margin
  - margin: the space between the box and surrounding boxes */

h1 {
  padding: 50px; /* 50 pixels to each side */
}

p {
  padding-top: 20px;    /* each side also selectable */
  padding-bottom: 20px;
  padding-left: 20px;
  padding-right: 20px;
}  

/* Padding shorthand: provide two values and it's interpreted as the vertical/horizontal value, respectively */
p {
  padding: 20px 10px; /* this will override the former */
}

/* border syntax:
   border<-postfix>: size style color, where <postfix> is optional; choose bottom, top, left, right */

h1 {
  padding: 50px;
  /* border: 1px dashed #5D6063; --> all borders */
  border-bottom: 1px dashed #5D6063;
  border-top: 1px dashed #5D6063;
}

/* Some notes on margins:
   - margin syntax: same as padding, including the shorthand syntax
   - margins and padding can accomplish kind of the same thing, but some nuances:
     - padding has a background, while margins are transparent
     - padding is included in the click area, while margins aren't
     - margins collapse vertically, while padding doesn't */

p {
  margin: 25px 30px;
}

/* Margins on Inline Elements
   - inline boxes completely ignore the top and bottom margins of an element,
     but fully obey padding directives
   - why? inline boxes format runs inside of a block, thus have limited impact on overall layout
   - if you want to play with vertical space on a page, you must be working with block-level elements
     - recall--you can change an element's box type (block or inline) using CSS! This will be key, so
       of you're banging your head against the wall because your vertical margins won't show... check the
       "display" property */

/* Vertical Margin Collapse
   - if you have two boxes with vertical margins sitting next to each other,
     they will collapse;
   - instead of adding margins together like you might expect, only the biggest
     is displayed
   - in order to get the effect you want (more space between but preserve the whole margins the way you want),
     you can add an invisible element in between; check the HTML for the "div" tag
   - of course, once we get to the flexbox, that concept will make it way easier to deal
     with margins and such */

p {
  padding: 20px 0 20px 10px;
  margin-top: 25px;
  margin-bottom: 50px; /* if you don't have an element separating your p elements, watch out for collapse */
}
